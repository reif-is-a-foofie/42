# Language & Formatting
language = "python"
python_version = "3.11"
formatter = "black"
type_hints = true
lint = "ruff"
test = "pytest -q"
style = "explicit"
max_line_length = 88

# Project Tasks & Structure
tasks_file = "TASKS.md"
require_task_context = true
require_explicit_input_output = true
strict_mode = true

# Safety Nets
avoid_overwriting_functions = true
reuse_existing_types = true
honor_docstrings = true
preserve_function_order = true
no_shared_state = true
no_global_mutables = true
failures_must_raise_known_exceptions = true
prefer_pure_functions = true
prefer_immutable_dataclasses = true

# CLI & API Consistency
cli_prefix = "42"
cli_commands_must_be = ["single verb", "lowercase", "idempotent"]
api_prefix = "/"
match_prd_endpoints = true
api_methods = ["get", "post"]
consistent_parameter_naming = true

# Testing Discipline
must_pass_tests = true
must_run_pytest_on = ["changed_files"]
require_test_for = ["cli/", "api/", "core/"]
test_style = "pytest"
use_fixture_autodiscovery = true

# Config & Constants
use_config_keys_from = "42.config.json"
no_hardcoded_constants = true
no_hardcoded_ports = true
prefer_env_vars_for_secrets = true

# Logging & Error Handling
require_try_except_for = ["file_io", "network_requests", "vector_db_ops"]
require_logging_for = ["CLI execution", "FastAPI routes", "Clustering ops"]
logger_must_be_injected = true
log_level = "INFO"
fail_fast_on_errors = true

# Module Discipline
modules = ["embedding", "vector", "cluster", "llm", "api", "cli"]
enforce_no_cross_layer_access = true
require_init_files = true
no_circular_imports = true
prefer_async_endpoints = true

# Imports & Comments
group_imports_alphabetically = true
comment_required_for = ["non-trivial algorithms", "regex", "multi-step logic"]
no_todo_without_ticket = true
no_star_imports = true
docstring_style = "google"

# UX Enhancements
prompt_user_on_file_overwrite = true
show_diff_before_commit = true
summarize_changes_after_multistep = true

- Follow the tasks in `TASKS.md` when generating code.
- Use Python 3.11 and keep dependencies minimal.
- Format code with `black` and include type hints.
- Run `ruff` for linting and `pytest -q` before committing.
- Write FastAPI endpoints to match the PRD.
- Keep commands idempotent and testable.